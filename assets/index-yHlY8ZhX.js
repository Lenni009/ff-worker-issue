(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();const a={PNG:"image/png",JPEG:"image/jpeg",GIF:"image/gif"};function p(t){return new Promise((e,n)=>{const s=new Image;s.onload=()=>e(s),s.onerror=()=>n(new Error("objectURL(): objectURL is illegal")),s.src=t})}const m="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO29ubWVzc2FnZT1hc3luYyh7ZGF0YTpzfSk9Pntjb25zdCBlPXtidWZmZXI6YXdhaXQoYXdhaXQgbihzKSkuYXJyYXlCdWZmZXIoKX07cG9zdE1lc3NhZ2UoZSx7dHJhbnNmZXI6W2UuYnVmZmVyXX0pLGNsb3NlKCl9O2FzeW5jIGZ1bmN0aW9uIG4oe2ltZzp7d2lkdGg6cyxoZWlnaHQ6YX0sYnVmZmVyOm8sY29uZmlnOmV9KXtjb25zdCByPW5ldyBPZmZzY3JlZW5DYW52YXMocyxhKSx0PXIuZ2V0Q29udGV4dCgiMmQiKSxjPW5ldyBCbG9iKFtvXSx7dHlwZTplLm9yaWdpbmFsVHlwZX0pLGY9YXdhaXQgY3JlYXRlSW1hZ2VCaXRtYXAoYyk7cmV0dXJuIHQ9PW51bGx8fHQuZHJhd0ltYWdlKGYsMCwwKSxhd2FpdCByLmNvbnZlcnRUb0Jsb2IoZSl9fSkoKTsK",b=t=>Uint8Array.from(atob(t),e=>e.charCodeAt(0)),l=typeof window<"u"&&window.Blob&&new Blob([b(m)],{type:"text/javascript;charset=utf-8"});function w(t){let e;try{if(e=l&&(window.URL||window.webkitURL).createObjectURL(l),!e)throw"";const n=new Worker(e,{name:t==null?void 0:t.name});return n.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),n}catch{return new Worker("data:text/javascript;base64,"+m,{name:t==null?void 0:t.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}async function y(t){return new Promise((e,n)=>{const s=new w;s.postMessage(t,[t.buffer]),s.onmessage=({data:r})=>{const o=new Blob([r.buffer],{type:t.config.type});e(o)},s.onerror=r=>{n(r)}})}async function g(t,e={}){e.type??(e.type=a.JPEG),e.quality??(e.quality=.92);const n=URL.createObjectURL(t),{width:s,height:r}=await p(n);URL.revokeObjectURL(n);const o={originalType:t.type,...e},f={buffer:await t.arrayBuffer(),img:{width:s,height:r},config:o};return await y(f)}const i=document.getElementById("file-upload");i==null||i.addEventListener("change",async()=>{if(!(i instanceof HTMLInputElement)){console.error("input is null");return}console.log("starting...");const t=Array.from(i.files??[]);let e=0;const s=t.map(c=>({id:e++,file:c})).map(c=>u(c.file)),o=(await Promise.all(s)).map(c=>new File([c],"fileName",{type:"image/jpeg"}));console.log("done",o)});const d=5e5;async function u(t,e=1){if(t.size<d)return t;const n=await g(t,{quality:e,type:a.JPEG});console.log(n.size,e);const s=e-.01;if(n.size>d&&e>0)return await u(t,s);const o=t.name.split(".").slice(0,-1).join(".")+"-min.jpg";return new File([n],o,{type:a.JPEG})}
