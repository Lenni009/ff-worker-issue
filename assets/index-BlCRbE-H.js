(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(t){if(t.ep)return;t.ep=!0;const o=n(t);fetch(t.href,o)}})();const m={PNG:"image/png",JPEG:"image/jpeg",GIF:"image/gif"};function u(r){return new Promise((e,n)=>{const s=new Image;s.onload=()=>e(s),s.onerror=()=>n(new Error("objectURL(): objectURL is illegal")),s.src=r})}const d="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO29ubWVzc2FnZT1hc3luYyh7ZGF0YTpzfSk9Pntjb25zdCBlPXtidWZmZXI6YXdhaXQoYXdhaXQgbihzKSkuYXJyYXlCdWZmZXIoKX07cG9zdE1lc3NhZ2UoZSx7dHJhbnNmZXI6W2UuYnVmZmVyXX0pLGNsb3NlKCl9O2FzeW5jIGZ1bmN0aW9uIG4oe2ltZzp7d2lkdGg6cyxoZWlnaHQ6YX0sYnVmZmVyOm8sY29uZmlnOmV9KXtjb25zdCByPW5ldyBPZmZzY3JlZW5DYW52YXMocyxhKSx0PXIuZ2V0Q29udGV4dCgiMmQiKSxjPW5ldyBCbG9iKFtvXSx7dHlwZTplLm9yaWdpbmFsVHlwZX0pLGY9YXdhaXQgY3JlYXRlSW1hZ2VCaXRtYXAoYyk7cmV0dXJuIHQ9PW51bGx8fHQuZHJhd0ltYWdlKGYsMCwwKSxhd2FpdCByLmNvbnZlcnRUb0Jsb2IoZSl9fSkoKTsK",f=r=>Uint8Array.from(atob(r),e=>e.charCodeAt(0)),i=typeof window<"u"&&window.Blob&&new Blob([f(d)],{type:"text/javascript;charset=utf-8"});function b(r){let e;try{if(e=i&&(window.URL||window.webkitURL).createObjectURL(i),!e)throw"";const n=new Worker(e,{name:r==null?void 0:r.name});return n.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),n}catch{return new Worker("data:text/javascript;base64,"+d,{name:r==null?void 0:r.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}async function w(r){return new Promise((e,n)=>{const s=new b;s.postMessage(r,[r.buffer]),s.onmessage=({data:t})=>{const o=new Blob([t.buffer],{type:r.config.type});e(o)},s.onerror=t=>{n(t)}})}async function y(r,e={}){e.type??(e.type=m.JPEG),e.quality??(e.quality=.92);const n=URL.createObjectURL(r),{width:s,height:t}=await u(n);URL.revokeObjectURL(n);const o={originalType:r.type,...e},l={buffer:await r.arrayBuffer(),img:{width:s,height:t},config:o};return await w(l)}const c=document.getElementById("file-upload");c==null||c.addEventListener("change",async()=>{if(!(c instanceof HTMLInputElement))return;const e=Array.from(c.files??[]).map(n=>y(n));await Promise.all(e),console.log("done",e)});
