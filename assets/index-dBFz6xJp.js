(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function o(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=o(r);fetch(r.href,s)}})();const u={PNG:"image/png",JPEG:"image/jpeg",GIF:"image/gif"};function f(t){return new Promise((e,o)=>{const n=new Image;n.onload=()=>e(n),n.onerror=()=>o(new Error("objectURL(): objectURL is illegal")),n.src=t})}const i="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO29ubWVzc2FnZT1hc3luYyh7ZGF0YTpzfSk9Pntjb25zdCBlPXtidWZmZXI6YXdhaXQoYXdhaXQgbihzKSkuYXJyYXlCdWZmZXIoKX07cG9zdE1lc3NhZ2UoZSx7dHJhbnNmZXI6W2UuYnVmZmVyXX0pLGNsb3NlKCl9O2FzeW5jIGZ1bmN0aW9uIG4oe2ltZzp7d2lkdGg6cyxoZWlnaHQ6YX0sYnVmZmVyOm8sY29uZmlnOmV9KXtjb25zdCByPW5ldyBPZmZzY3JlZW5DYW52YXMocyxhKSx0PXIuZ2V0Q29udGV4dCgiMmQiKSxjPW5ldyBCbG9iKFtvXSx7dHlwZTplLm9yaWdpbmFsVHlwZX0pLGY9YXdhaXQgY3JlYXRlSW1hZ2VCaXRtYXAoYyk7cmV0dXJuIHQ9PW51bGx8fHQuZHJhd0ltYWdlKGYsMCwwKSxhd2FpdCByLmNvbnZlcnRUb0Jsb2IoZSl9fSkoKTsK",b=t=>Uint8Array.from(atob(t),e=>e.charCodeAt(0)),a=typeof window<"u"&&window.Blob&&new Blob([b(i)],{type:"text/javascript;charset=utf-8"});function p(t){let e;try{if(e=a&&(window.URL||window.webkitURL).createObjectURL(a),!e)throw"";const o=new Worker(e,{name:t==null?void 0:t.name});return o.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),o}catch{return new Worker("data:text/javascript;base64,"+i,{name:t==null?void 0:t.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}async function w(t){return new Promise((e,o)=>{const n=new p;n.postMessage(t,[t.buffer]),n.onmessage=({data:r})=>{const s=new Blob([r.buffer],{type:t.config.type});e(s)},n.onerror=r=>{o(r)}})}async function y(t,e={}){e.type??(e.type=u.JPEG),e.quality??(e.quality=.92);const o=URL.createObjectURL(t),{width:n,height:r}=await f(o);URL.revokeObjectURL(o);const s={originalType:t.type,...e},m={buffer:await t.arrayBuffer(),img:{width:n,height:r},config:s};return await w(m)}const c=document.getElementById("file-upload");c==null||c.addEventListener("change",async()=>{if(!(c instanceof HTMLInputElement)){console.error("input is null");return}console.log("starting...");const e=Array.from(c.files??[]).map(r=>d(r)),n=(await Promise.all(e)).map(r=>new File([r],"fileName",{type:"image/jpeg"}));console.log("done",n)});async function d(t,e=1){console.log(e);const o=await y(t,{quality:e});return e===1?d(t,e-.1):o}
