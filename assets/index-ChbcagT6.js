(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(t){if(t.ep)return;t.ep=!0;const n=s(t);fetch(t.href,n)}})();const m={PNG:"image/png",JPEG:"image/jpeg",GIF:"image/gif"};function u(r){return new Promise((e,s)=>{const o=new Image;o.onload=()=>e(o),o.onerror=()=>s(new Error("objectURL(): objectURL is illegal")),o.src=r})}const i="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO29ubWVzc2FnZT1hc3luYyh7ZGF0YTpzfSk9Pntjb25zdCBlPXtidWZmZXI6YXdhaXQoYXdhaXQgbihzKSkuYXJyYXlCdWZmZXIoKX07cG9zdE1lc3NhZ2UoZSx7dHJhbnNmZXI6W2UuYnVmZmVyXX0pLGNsb3NlKCl9O2FzeW5jIGZ1bmN0aW9uIG4oe2ltZzp7d2lkdGg6cyxoZWlnaHQ6YX0sYnVmZmVyOm8sY29uZmlnOmV9KXtjb25zdCByPW5ldyBPZmZzY3JlZW5DYW52YXMocyxhKSx0PXIuZ2V0Q29udGV4dCgiMmQiKSxjPW5ldyBCbG9iKFtvXSx7dHlwZTplLm9yaWdpbmFsVHlwZX0pLGY9YXdhaXQgY3JlYXRlSW1hZ2VCaXRtYXAoYyk7cmV0dXJuIHQ9PW51bGx8fHQuZHJhd0ltYWdlKGYsMCwwKSxhd2FpdCByLmNvbnZlcnRUb0Jsb2IoZSl9fSkoKTsK",f=r=>Uint8Array.from(atob(r),e=>e.charCodeAt(0)),a=typeof window<"u"&&window.Blob&&new Blob([f(i)],{type:"text/javascript;charset=utf-8"});function b(r){let e;try{if(e=a&&(window.URL||window.webkitURL).createObjectURL(a),!e)throw"";const s=new Worker(e,{name:r==null?void 0:r.name});return s.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),s}catch{return new Worker("data:text/javascript;base64,"+i,{name:r==null?void 0:r.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}async function p(r){return new Promise((e,s)=>{const o=new b;o.postMessage(r,[r.buffer]),o.onmessage=({data:t})=>{const n=new Blob([t.buffer],{type:r.config.type});e(n)},o.onerror=t=>{s(t)}})}async function w(r,e={}){e.type??(e.type=m.JPEG),e.quality??(e.quality=.92);const s=URL.createObjectURL(r),{width:o,height:t}=await u(s);URL.revokeObjectURL(s);const n={originalType:r.type,...e},d={buffer:await r.arrayBuffer(),img:{width:o,height:t},config:n};return await p(d)}const c=document.getElementById("file-upload");c==null||c.addEventListener("change",async()=>{if(!(c instanceof HTMLInputElement)){console.error("input is null");return}console.log("starting...");const r=Array.from(c.files??[]),e=r.map(t=>w(t));console.log(r[0].name);const o=(await Promise.all(e)).map(t=>new File([t],"fileName",{type:"image/jpeg"}));console.log("done",o)});
